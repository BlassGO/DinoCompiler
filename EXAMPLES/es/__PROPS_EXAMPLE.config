:COMANDO -> archivo = [-file, -f], resultado = [-output, -o]
    Mensaje "Entrada" con archivo[1]
    Mensaje "Salida" con resultado[1]
:COMANDO_LITERAL -> COMANDO_LITERAL = [literal=1]
    # Las propiedades se definen de la misma forma que los Apodos, pero se distinguen por su escritura "PROPIEDAD=VALOR"
    Para CLAVE VALOR en COMANDO_LITERAL
       Mensaje "PARÁMETRO" con VALOR
:COMANDO_LITERAL_2 -> COMANDO_LITERAL_2 = [literal=1], ADICIONAL = [literal=1]
    # El uso de la propiedad "literal" no evita el reconocimiento de conectores
    # Es decir, si se desea que los conectores también acepten parámetros literales, se debe definir la misma propiedad en el conector
    Para CLAVE VALOR en COMANDO_LITERAL_2
       Mensaje "PARÁMETRO" con VALOR
    Para CLAVE VALOR en ADICIONAL
       Mensaje "PARÁMETRO ADICIONAL" con VALOR
:COMANDO_LITERAL_3 -> mi_conector = [Apodo1, Apodo2, literal=1, max=2]
   # Se pueden definir apodos y propiedades al mismo tiempo
   # En este caso se activo el uso de parámetros literales y se limito a 2 parámetros, solo para el conector "mi_conector"
   Para CLAVE VALOR en mi_conector
       Mensaje "PARÁMETRO" con VALOR 
:MAIN
  # Utilizando los Apodos de DinoCode para conectores es posible simular opciones como "-f" "-o"
  # Además de obtener la información ya organizada
  Imprimir "Primer ejemplo"
  comando -f "entrada de prueba" -output "salida de prueba"
  
  # Pero si se desean procesar parámetros indefinidos o desconocidos es necesario activar propiedades como "literal=1"
  Imprimir "Segundo ejemplo"
  comando_literal -a -b -c -d -e -f

  # Los conectores aún pueden agrupar sus propios parámetros incluso cuando se habilitó la propiedad "literal=1" en la función principal
  Imprimir "Tercer ejemplo"
  comando_literal_2 -a -b -c ADICIONAL -d -e -f

  # Si se limita el número de parámetros implica un ERROR en caso de no respetarlo
  # La siguiente acción generará un error, ya que "Apodo1" únicamente puede recibir 2 parámetros
  Imprimir "Cuarto ejemplo"
  comando_literal_3 "a" "b" "c" Apodo1 1 2 3

